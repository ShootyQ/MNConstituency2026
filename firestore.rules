rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Members collection (new unified collection)
    match /members/{memberId} {
      // Allow read access to authenticated users
      allow read: if request.auth != null;
      
      // Allow users to create/update their own member document
      allow create, update: if request.auth != null && 
        (request.auth.uid == memberId || request.auth.uid == resource.data.uid);
      
      // Allow admins to read and write any member document
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/members/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/members/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Legacy collections (keep for backwards compatibility)
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.token.admin == true;
      allow delete: if false;
    }
    match /checkins/{checkinId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if false;
    }
    match /admin/{document} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }
  }
}
